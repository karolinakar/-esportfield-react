{"version":3,"sources":["map-table/MapTable.js","model.js","map/Map.js","App.js","index.js"],"names":["columns","dataField","text","MapTable","keyField","data","this","props","markers","React","Component","MarkerModel","id","longitude","latitude","Map","state","style","viewport","width","height","zoom","setState","event","concat","length","lngLat","onMarkersChange","updatedMarkers","marker","push","markersElement","value","offsetLeft","offsetTop","key","draggable","onDragEnd","updateMarker","icon","faMapMarkerAlt","className","mapStyle","mapboxApiAccessToken","onViewportChange","onClick","addMarker","App","Accordion","defaultActiveKey","Card","Header","Toggle","as","eventKey","Collapse","Body","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38865ee3.chunk.js","sourcesContent":["import BootstrapTable from 'react-bootstrap-table-next';\r\nimport React from \"react\";\r\n\r\nconst columns = [{\r\n    dataField: 'id',\r\n    text: 'ID'\r\n}, {\r\n    dataField: 'longitude',\r\n    text: 'Długość geograficzna'\r\n}, {\r\n    dataField: 'latitude',\r\n    text: 'Szerokość geograficzna'\r\n}];\r\n\r\nexport class MapTable extends React.Component {\r\n    render() {\r\n        return (\r\n            <BootstrapTable keyField='id' data={this.props.markers} columns={columns}/>\r\n        );\r\n    }\r\n}\r\n","export class MarkerModel {\r\n\r\n    constructor(id, longitude, latitude){\r\n        this.id = id;\r\n        this.longitude = longitude;\r\n        this.latitude = latitude;\r\n    }\r\n}","import React from 'react';\r\nimport ReactMapGL, {Marker} from 'react-map-gl';\r\nimport {MarkerModel} from \"../model\";\r\nimport './Map.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faMapMarkerAlt} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst MAPBOX_ACCESS_TOKEN = \"pk.eyJ1Ijoia2Fyb2xpbmFrYXIiLCJhIjoiY2p6ZzBxam1vMGhkcDNldDZ5d3NsNnJ0ciJ9.hQqCDQZLI-xaxEPbUWMGmA\";\r\n\r\nexport class Map extends React.Component {\r\n\r\n    state = {\r\n        style: 'mapbox://styles/mapbox/light-v9',\r\n        viewport: {\r\n            width: 1000,\r\n            height: 600,\r\n            latitude: 52.2297700,\r\n            longitude: 21.0117800,\r\n            zoom: 8\r\n        },\r\n        markers: []\r\n    };\r\n\r\n    onViewportChange(viewport) {\r\n        this.setState(viewport);\r\n    }\r\n\r\n    addMarker(event) {\r\n        this.setState({\r\n            style: this.state.style,\r\n            viewport: this.state.viewport,\r\n            markers: this.state.markers.concat(new MarkerModel(this.state.markers.length + 1, event.lngLat[0], event.lngLat[1]))\r\n        });\r\n        this.props.onMarkersChange(this.state.markers);\r\n    }\r\n\r\n    updateMarker(event, id) {\r\n        const updatedMarkers = [];\r\n\r\n        for (const marker of this.state.markers) {\r\n            if (id === marker.id) {\r\n                marker.longitude = event.lngLat[0];\r\n                marker.latitude = event.lngLat[1];\r\n            }\r\n            updatedMarkers.push(marker);\r\n        }\r\n\r\n        this.setState({\r\n            style: this.state.style,\r\n            viewport: this.state.viewport,\r\n            markers: updatedMarkers\r\n        });\r\n        this.props.onMarkersChange(this.state.markers);\r\n    }\r\n\r\n    render() {\r\n\r\n        const markersElement = [];\r\n\r\n        for (const value of this.state.markers) {\r\n\r\n            markersElement.push(\r\n                <Marker latitude={value.latitude} longitude={value.longitude} offsetLeft={-10} offsetTop={-20}\r\n                        key={value.id}\r\n                        draggable={true}\r\n                        onDragEnd={(event) => this.updateMarker(event, value.id)}>\r\n                    <FontAwesomeIcon icon={faMapMarkerAlt} />\r\n                </Marker>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"mapContent\">\r\n                <ReactMapGL\r\n                    {...this.state.viewport}\r\n                    mapStyle={this.state.style}\r\n                    mapboxApiAccessToken={MAPBOX_ACCESS_TOKEN}\r\n                    onViewportChange={(viewport) => this.onViewportChange({viewport})}\r\n                    onClick={(event) => this.addMarker(event)}\r\n                >\r\n                    {markersElement}\r\n\r\n                </ReactMapGL>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Accordion, Card} from 'react-bootstrap';\r\nimport {MapTable} from './map-table/MapTable';\r\nimport {Map} from './map/Map';\r\nimport Container from \"react-bootstrap/Container\";\r\n\r\nexport class App extends React.Component {\r\n\r\n    state = {\r\n        markers: []\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Accordion defaultActiveKey=\"0\">\r\n                    <Card>\r\n                        <Card.Header className=\"header\">\r\n                            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                Mapa\r\n                            </Accordion.Toggle>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <Card.Body>\r\n                                <Map markers={this.state.markers}\r\n                                     onMarkersChange={(markers) => this.setState({markers: markers})}/>\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                    <Card>\r\n                        <Card.Header className=\"header\">\r\n                            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                                Tabela znaczników\r\n                            </Accordion.Toggle>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey=\"1\">\r\n                            <Card.Body>\r\n                                <MapTable markers={this.state.markers}/>\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}